<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Confidential Team</title>
    
    
    
    <link>/</link>
    <description>Recent content on Confidential Team</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 03 Jan 2022 16:57:00 -0500</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Infiltrationar</title>
      <link>/posts/infiltrationar/</link>
      <pubDate>Mon, 03 Jan 2022 16:57:00 -0500</pubDate>
      
      <guid>/posts/infiltrationar/</guid>
      <description>
        
          
          
          
        
        
        
          Introduction ألسلام عليكم  سمعنا كثير عن طرق تستخدم لنقل الملفات لجهاز الضحية ومعظم هذه الطرق صارة منتشرة الا درجة انها صارت سهلة الأكتشاف. في Confidential اتخذنا خطوة جديدة في نقل الملفات مما خلاها معقدة ليتم اكتشافها. رح تشوفون اليوم كيف قدرنا ننقل CS beacon عن طريق اكثر من medium.  Brief في البداية قسمنا ال CS beacon الى عدة قطع والي بعدين رح يتم نقلها عن طريق اكثر من medium (DNS TXT record, HTTP response header, and SMTP server&#39;s banner) وكل هذا يصير عن طريق برنامج خاص بالفريق وتقدرون تشوفون ال demo في النهاية.
          
        
        </description>
    </item>
    
    <item>
      <title>Infiltrating CS Beacon through out different mediums</title>
      <link>/posts/infiltration/</link>
      <pubDate>Mon, 03 Jan 2022 16:56:40 -0500</pubDate>
      
      <guid>/posts/infiltration/</guid>
      <description>
        
          
          
          
        
        
        
          Introduction: Hello Everyone, We all have heard of many infiltration techniques that were widely used making them easy to be detected. so we at Confidential took a step toward an infiltration technique that will make it a bit more complex in order not to be detected by any sense. Today&amp;rsquo;s article will clarify how we have infiltrated CS beacon through out different mediums.
Brief We splitted the CS beacon into multiple chunks that will be later infiltrated from different mediums (DNS txt record, custome HTTP response header, and SMTP server&amp;rsquo;s banner) using an executable agent that we will show a full demo about at the end of the article.
          
        
        </description>
    </item>
    
    <item>
      <title>Memory Patching (AMSI Bypass)</title>
      <link>/posts/memorypatching/</link>
      <pubDate>Sun, 26 Dec 2021 09:18:17 -0500</pubDate>
      
      <guid>/posts/memorypatching/</guid>
      <description>
        
          
          
          
        
        
        
          Introduction Hello everyone. I think we all have faced the (Antimalware Scan Interface) or as known as the AMSI. I also belive you had some problem when loading for example a powershell modules like Mimikatz. In small words, the AMSI will be loaded in any application that uses WIN32 API. You can also check the AMSI architecture from the image below.
Overview From the image we can notice that the function that check the malicious files content is AmsiScanBuffer() and AmsiScanString().
          
        
        </description>
    </item>
    
    <item>
      <title>Memory Patching (AMSI Bypass)</title>
      <link>/posts/memorypatchingar/</link>
      <pubDate>Sat, 25 Dec 2021 21:56:40 -0500</pubDate>
      
      <guid>/posts/memorypatchingar/</guid>
      <description>
        
          
          
          
        
        
        
          Introduction ألسلام عليكم  معظمنا واجه ال (Antimalware Scan Interface) أو المعروفة ب `AMSI`. وغالباً واجهتم مشاكل في اي وقت حاولتم تضيفون powershell module مثل `Mimikatz` وغيرها. ال `AMSI` رح يصيرل له load في أي Application يستخدم ال `WIN32 API`. تقدرون تطلعون على ال `AMSI architecture` من الصورة الي بالأسفل  Overview من الصورة نقدر نلاحظ ان ال function المسؤل عن التشيك على الملفات الخبيثة هو `AmsiScanBuffer()` و `AmsiScanString()`. نقدر نستخدم `Process Hacker` ونشوف ايش ال Modules الي جالسة تشتغل مع اي برنامج.
          
        
        </description>
    </item>
    
    <item>
      <title>About Us</title>
      <link>/about/</link>
      <pubDate>Sat, 25 Dec 2021 18:57:57 -0500</pubDate>
      
      <guid>/about/</guid>
      <description>
        
          
          
          
        
        
        
          [+] As we told you, we are Confidential [+] 
          
        
        </description>
    </item>
    
    <item>
      <title></title>
      <link>/img/memorypatching/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/img/memorypatching/readme/</guid>
      <description>
        
          
          
          
        
        
        
          
          
        
        </description>
    </item>
    
  </channel>
</rss>