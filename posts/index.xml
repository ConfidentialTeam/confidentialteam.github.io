<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Confidential Team</title>
    
    
    
    <link>/posts/</link>
    <description>Recent content in Posts on Confidential Team</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 26 Dec 2021 09:18:17 -0500</lastBuildDate>
    
	<atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Memory Patching (AMSI Bypass)</title>
      <link>/posts/memorypatching/</link>
      <pubDate>Sun, 26 Dec 2021 09:18:17 -0500</pubDate>
      
      <guid>/posts/memorypatching/</guid>
      <description>
        
          
          
          
        
        
        
          Introduction Hello everyone. I think we all have faced the (Antimalware Scan Interface) or as known as the AMSI. I also belive you had some problem when loading for example a powershell modules like Mimikatz. In small words, the AMSI will be loaded in any application that uses WIN32 API. You can also check the AMSI architecture from the image below.
Overview From the image we can notice that the function that check the malicious files content is AmsiScanBuffer() and AmsiScanString().
          
        
        </description>
    </item>
    
    <item>
      <title>Memory Patching (AMSI Bypass)</title>
      <link>/posts/memorypatchingar/</link>
      <pubDate>Sat, 25 Dec 2021 21:56:40 -0500</pubDate>
      
      <guid>/posts/memorypatchingar/</guid>
      <description>
        
          
          
          
        
        
        
          Introduction ألسلام عليكم  معظمنا واجه ال (Antimalware Scan Interface) أو المعروفة ب `AMSI`. وغالباً واجهتم مشاكل في اي وقت حاولتم تضيفون powershell module مثل `Mimikatz` وغيرها. ال `AMSI` رح يصيرل له load في أي Application يستخدم ال `WIN32 API`. تقدرون تطلعون على ال `AMSI architecture` من الصورة الي بالأسفل  Overview من الصورة نقدر نلاحظ ان ال function المسؤل عن التشيك على الملفات الخبيثة هو `AmsiScanBuffer()` و `AmsiScanString()`. نقدر نستخدم `Process Hacker` ونشوف ايش ال Modules الي جالسة تشتغل مع اي برنامج.
          
        
        </description>
    </item>
    
  </channel>
</rss>